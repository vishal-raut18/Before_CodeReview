@using System.Collections.Generic
@{
    ViewBag.Title = "Ticketing";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="background-color: white; padding: 15px 30px; margin-right: -30px; height:80vh !important;">
    <div class="d-flex justify-content-between align-items-center mb-3  ">

        <div class="d-flex align-items-center">

            <i class="bi bi-graph-up me-2"
               style="font-size: 20px; "></i>

            <span id="ticketReportLabel"
                  class="d-flex align-items-center mb-0"
                  style="font-family: 'Open Sans', 'Segoe UI' !important; font-size: 18px; color: #0091ff;">

                Incoming Ticket Report
            </span>

            <div class="dropdown grid-filter ms-2">
                <button class="btn dropdown-toggle px-2 py-1 text-muted small ab" type="button" data-bs-toggle="dropdown"
                        style="font-family: 'Open Sans', 'Segoe UI'; border:none !important;">
                    <i class="bi bi-filter-circle me-1" style="font-size: 23px; width: 80px;"></i>
                </button>

                <ul class="dropdown-menu dropdown-menu-end" id="ticketReportDropdown">
                    <li><a class="dropdown-item" data-filter="All" href="#">All</a></li>
                    <li><a class="dropdown-item" data-filter="Active" href="#">Active</a></li>
                    <li><a class="dropdown-item" data-filter="Closed" href="#">Closed</a></li>
                    <li><a class="dropdown-item" data-filter="MyTicket" href="#">My Ticket</a></li>
                    <li><a class="dropdown-item" data-filter="Unassigned" href="#">Unassigned</a></li>
                </ul>
            </div>
        </div>



        <!-- Filter badge + clear button -->

        <div class="d-flex align-items-center" style="gap: 14px; margin-right: 5px;">

            <!-- Actions Styled Dropdown Box -->

            @Html.Partial("_ActionDropdown")




            <!-- New Ticket Button (Outlined Green) -->
            <button class="btn  btn-sm d-flex align-items-center justify-content-center px-3 py-1 new-ticket-btn"
                    data-bs-toggle="modal" data-bs-target="#newTicketModal">

                NEW TICKET
            </button>

            <!-- Export Report Styled Dropdown Box -->
            <div>
                <button class="btn btn-sm  text-white  d-flex align-items-center px-3"
                        type="button" data-bs-toggle="dropdown" aria-expanded="false"
                        style="height: 23px; border-radius: 6px; font-family: ' Open Sans', 'Segoe UI'; font-size: 10px; background-color: #0091ff; font-weight:600;">
                    EXPORT REPORT <i class="bi bi-chevron-down" style="margin-left:6px;"></i>
                </button>
            </div>

        </div>



    </div>


    <div class="controls-bar row g-2 align-items-center mb-3">
        <div class="col-md-12 d-flex flex-wrap align-items-center"
             style="gap: 16px; font-family: 'Open Sans', 'Segoe UI'; font-size: 13px;">

            <!-- Filter Dropdown -->
            <button class="btn dropdown-toggle p-0" type="button" data-bs-toggle="modal" data-bs-target="#filterModal" style="font-size: 13px; ">
                <i class="bi bi-funnel-fill me-1"></i> Filters
            </button>


            <!-- Group Dropdown -->
            <div class="dropdown">
                <button class="btn dropdown-toggle p-0  " type="button" data-bs-toggle="dropdown" style="font-size: 13px;">
                    <i class="bi bi-person-vcard-fill me-1"></i> Groups
                </button>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item" href="#">Default</a></li>
                    <li><a class="dropdown-item" href="#">Custom</a></li>
                </ul>
            </div>

            <!-- Custom Search Box -->
            <div id="customSearchWrapper" style="padding-top: 1px;">
                <div class="position-relative" id="searchContainer" style="min-width: 100px; transition: width 0.3s;">
                    <i class="bi bi-search position-absolute"
                       style="top: 50%; left: 8px; transform: translateY(-50%); color: black; font-size: 13px;"></i>

                    <i class="bi bi-x-lg position-absolute clear-icon"
                       id="clearSearch"
                       style="top: 50%; right: 8px; transform: translateY(-50%); color: #888; font-size: 11px;
              cursor: pointer; display: none; z-index: 10;"></i>

                    <input type="text" id="customSearch"
                           class="form-control form-control-sm border-0 shadow-none"
                           placeholder="Search"
                           style="background-color: transparent; border-bottom: 1px solid #ccc; border-radius: 0;
                  padding-left: 30px; padding-right: 20px; font-size: 13px; font-family: 'Open Sans', 'Segoe UI';
                  transition: width 0.3s;" />
                </div>

            </div>
            <!-- Selection Badge (Initially Hidden) -->

            <div id="selectionBadge"
                 class="d-flex align-items-center ms-1 px-3 py-1 rounded-pill text-white d-none"
                 style="background-color: #0091ff; font-size: 13px; height: 30px;">

                <span>Selected <span id="selectedCount">0</span></span>

                <button type="button"
                        class="ms-2 d-flex align-items-center justify-content-center p-0"
                        onclick="clearSelection()"
                        style="width: 18px; height: 18px; border-radius: 50%; background-color: #fff; border: none;">
                    <span style="font-size: 12px; color: #0091ff; line-height: 1;">×</span>
                </button>
            </div>

            <!-- Filter Badge -->

            <div id="selectionBadgeFilter"
                 class="d-flex align-items-center ms-1 px-3 py-1 rounded-pill text-white d-none"
                 style="background-color: #0091ff; font-size: 13px; height: 30px; padding-right:5px !important;">
                <span>Clear Filter </span>
                <button type="button"
                        class="ms-2 d-flex align-items-center justify-content-center p-0"
                        onclick="clearAllFilters()"
                        style="width: 18px; height: 18px; border-radius: 50%; background-color: #fff; border: none;">
                    <span style="font-size: 12px; color: #0091ff; line-height: 1; margin-right:1px;">×</span>
                </button>
            </div>


            <div id="ticketReportBridge"
                 class="d-flex align-items-center ms-1 px-3 py-1 rounded-pill text-white d-none"
                 style="background-color: #0091ff; font-size: 13px; height: 30px;">
                <span>Clear Filter </span>
                <button type="button"
                        class="ms-2 d-flex align-items-center justify-content-center p-0"
                        onclick="clearTicketReportBridge()"
                        style="width: 18px; height: 18px; border-radius: 50%; background-color: #fff; border: none;">
                    <span style="font-size: 12px; color: #0091ff; line-height: 1;">×</span>
                </button>
            </div>




            <!-- Spacer -->
            <div class="flex-grow-1"></div>

            <!-- Right-side Controls -->
            <div class="d-flex align-items-center" style="gap: 6px; font-family: 'Open Sans', 'Segoe UI';">

                <!-- Column Dropdown -->
                <button class="btn dropdown-toggle p-0" type="button" data-bs-toggle="modal" data-bs-target="#columnChooserModal" style="font-size: 13px;">
                    <i class="bi bi-layout-three-columns me-1"></i> Column
                </button>

                <!-- Settings Icon -->
                <button class="btn btn-sm btn-light d-flex align-items-center justify-content-center"
                        style="width: 30px; height: 30px; border-radius: 4px;" title="Settings">
                    <i class="bi bi-gear"></i>
                </button>

                <!-- Zoom In Icon -->
                <button class="btn btn-sm btn-light d-flex align-items-center justify-content-center"
                        style="width: 30px; height: 30px; border-radius: 4px;" title="Zoom In">
                    <i class="bi bi-fullscreen"></i>
                </button>
            </div>
        </div>
    </div>

    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Message"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div id="ticketGridWrapper" style="margin-left: -20px; max-height: calc(100vh - 200px); overflow-y: auto;">
        <div id="ticketGrid"></div>
    </div>






</div>




<!-- Close Confirmation Modal -->
<div class="modal fade" id="closeTicketModal" tabindex="-1" aria-labelledby="closeTicketModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="max-width: 650px;">
        <div class="modal-content border-0 shadow rounded-0" style="font-family: 'Open Sans','Segoe UI'; font-size: 14px;">


            <div class="modal-header px-4 pt-3 pb-2 border-bottom-0">
                <h6 class="modal-title fw-bold" id="closeTicketModalLabel" style="font-size: 16px; color: #6e6e6e;">
                    Close Ticket(s)
                </h6>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>


            <div class="modal-body px-0 pt-2 pb-0">


                <div class="w-100 py-2 px-4 mb-3" style="background-color: #f0f0f0;">
                    This action will close the selected ticket(s)
                </div>


                <div class="px-4">

                    <div class="form-check mb-3">
                        <input class="form-check-input" type="checkbox" id="sendEmailCheckbox">
                        <label class="form-check-label" for="sendEmailCheckbox" style="font-weight: 500;">
                            Send Email to the User who submitted this ticket confirming that the ticket has been closed.
                        </label>
                    </div>


                    <div class="mb-2">
                        <label for="closeNotes" class="form-label mb-1 fw-semibold">Notes</label>
                        <div style="width: 100%;">
                            <textarea class="form-control"
                                      id="closeNotes"
                                      rows="4"
                                      maxlength="1000"
                                      style="resize: none; width: 100%; border: 1px solid #ced4da;"></textarea>
                        </div>
                        <style>
                            #closeNotes {
                                width: 100% !important;
                                min-width: 100% !important;
                                height: 200px !important;
                            }
                        </style>
                        <div class="text-end small text-muted mt-1">
                            <span id="notesCharCount">0</span>/1000
                        </div>
                    </div>
                </div>
            </div>

            <!-- Footer -->
            <div class="modal-footer border-top-0 px-4 pb-3 justify-content-between">
                <button type="button" class="btn btn-outline-secondary px-4" data-bs-dismiss="modal" style="width: 150px; font-size: 13px; font-family: 'Open Sans', 'Segoe UI';  color: black;  letter-spacing: 6px; ">CANCEL</button>
                <button type="button" class="btn " id="confirmCloseTicket" style="width: 150px; font-size: 13px; font-family: 'Open Sans', 'Segoe UI'; background-color: #0091ff; color: white; font-weight:400; letter-spacing: 6px;">DONE</button>

            </div>

        </div>
    </div>
</div>

@Html.Partial("_NewTicketModal")
@Html.Partial("_AssignOwnerModal")
@Html.Partial("_AssignToModal")

<script>
    $(document).ready(function () {
        const $input = $('#customSearch');
        const $clearIcon = $('#clearSearch');

        // Show/hide clear icon when input changes
        $input.on('input', function () {
            $clearIcon.toggle($(this).val().length > 0);
        });

        // Prevent blur before clear by using mousedown instead of click
        $clearIcon.on('mousedown', function (e) {
            e.preventDefault(); // Prevent input from losing focus
            $input.val('').trigger('input'); // Clear input instantly
        });
    });
</script>
<script>
    $(document).ready(function () {

        // Sample Assignee List
        const assigneeUsers = [
            { Name: "John Smith", Email: "john.smith@example.com", UserType: "Admin", Role: "Support" },
            { Name: "Alice Johnson", Email: "alice.j@example.com", UserType: "User", Role: "Support" },
            { Name: "David Lee", Email: "david.lee@example.com", UserType: "Super Admin", Role: "Manager" },
            { Name: "Rahul Verma", Email: "rahul.verma@example.com", UserType: "Admin", Role: "Support" },
            { Name: "Priya Mehta", Email: "priya.mehta@example.com", UserType: "User", Role: "Manager" },
            { Name: "Arjun Desai", Email: "arjun.desai@example.com", UserType: "Super Admin", Role: "Support" }
        ];

        // Initialize DevExtreme DataGrid
        $("#editAssignToModelGrid").dxDataGrid({
            dataSource: assigneeUsers,
            keyExpr: "Email",
            selection: {
                mode: "single",
                showCheckBoxesMode: "always"
            },
            paging: {
                pageSize: 10
            },
            pager: {
                visible: true,
                showInfo: true,
                showNavigationButtons: true
            },
            scrolling: {
                mode: "standard",
                showScrollbar: "always"
            },
            hoverStateEnabled: true,
            columns: [
                {
                    type: "selection",
                    width: 39,
                    cssClass: "circle-checkbox-only-editAssign",
                    fixed: true,
                    fixedPosition: "left"
                },
                { dataField: "Name", caption: "Name" },
                { dataField: "Email", caption: "Email" },
                { dataField: "UserType", caption: "User Type" },
                { dataField: "Role", caption: "Role" }
            ],
            onCellPrepared: function (e) {
                if (e.rowType === "data" && e.column.command === "select") {
                    const currentAssigned = $("#currentAssignedToName").val();
                    if (e.data.Name === currentAssigned) {
                        $(e.cellElement).addClass("preselected-green-checkbox");
                    } else {
                        $(e.cellElement).removeClass("preselected-green-checkbox");
                    }
                }
            }
        });

        // Open Assign Ticket Modal
        $(document).on("click", ".assign-ticket-action", function (e) {
            e.preventDefault();

            const selected = ticketGridInstance.getSelectedRowsData();
            if (selected.length === 0) {
                alert("Please select a ticket to assign.");
                return;
            }

            const ticket = selected[0];

            if (!ticket.ID || !ticket.TicketID) {
                alert("Selected ticket is missing identifiers.");
                return;
            }

            $("#assignID").val(ticket.ID);
            $("#assignTicketID").val(ticket.TicketID);
            $("#currentAssignedToName").val(ticket.AssignedTo?.split(" (")[0] || "");

            // Show modal
            bootstrap.Modal.getOrCreateInstance(document.getElementById("editassignToModal")).show();

            // Deselect and refresh grid
            const assignGrid = $("#editAssignToModelGrid").dxDataGrid("instance");
            assignGrid.deselectAll();
            assignGrid.refresh();
        });

        // Assign User Button Clicked
        $("#assignUserBtn").on("click", function () {
            const assignGrid = $("#editAssignToModelGrid").dxDataGrid("instance");
            const selectedUser = assignGrid.getSelectedRowsData()[0];

            if (!selectedUser) {
                alert("Please select a user to assign.");
                return;
            }

            const id = parseInt($("#assignID").val());
            const ticketId = $("#assignTicketID").val();
            const assignedToValue = `${selectedUser.Name} (${selectedUser.Role})`;

            const existingTicket = ticketData.find(t => t.ID === id);
            if (!existingTicket) {
                alert("Could not find ticket data.");
                return;
            }

            // Prepare update object
            const updatedData = {
                ID: id,
                TicketID: ticketId,
                Computer: existingTicket.Computer,
                Status: existingTicket.Status,
                Owner: existingTicket.Owner,
                AssignedTo: assignedToValue,
                Description: existingTicket.Description,
                Email: existingTicket.Email,
                Priority: existingTicket.Priority
            };

            // Update server and UI
            $.ajax({
                url: '/Ticket/UpdateTicket',
                type: 'POST',
                data: updatedData,
                success: function () {
                    // Update local data
                    const index = ticketData.findIndex(t => t.ID === id);
                    if (index !== -1) {
                        Object.assign(ticketData[index], updatedData);
                    }

                    ticketGridInstance.option("dataSource", ticketData);
                    ticketGridInstance.refresh();
                    ticketGridInstance.clearSelection();

                    // Hide modal
                    bootstrap.Modal.getInstance(document.getElementById("editassignToModal")).hide();
                    showSuccessToast(); // optional: custom toast function
                },
                error: function () {
                    alert("Error updating AssignedTo.");
                }
            });
        });
    });
</script>
<script>
    $(document).ready(function () {
        // ========== 1. Sample Data ==========
        const ownerUsers = [
            { Name: "John Smith", Email: "john.smith@example.com", UserType: "Admin", Role: "Support" },
            { Name: "Alice Johnson", Email: "alice.j@example.com", UserType: "User", Role: "Support" },
            { Name: "David Lee", Email: "david.lee@example.com", UserType: "Super Admin", Role: "Manager" },
            { Name: "Rahul Verma", Email: "rahul.verma@example.com", UserType: "Admin", Role: "Support" },
            { Name: "Priya Mehta", Email: "priya.mehta@example.com", UserType: "User", Role: "Manager" },
            { Name: "Arjun Desai", Email: "arjun.desai@example.com", UserType: "Super Admin", Role: "Support" }
        ];

        // ========== 2. Initialize DevExtreme Grid ==========
        $("#editassignToOwnerGrid").dxDataGrid({
            dataSource: ownerUsers,
            keyExpr: "Email",
            selection: {
                mode: "single",
                showCheckBoxesMode: "always"
            },
            paging: {
                pageSize: 10
            },
            pager: {
                visible: true,
                showInfo: true,
                showNavigationButtons: true
            },
            scrolling: {
                mode: "standard",
                showScrollbar: "always"
            },
            hoverStateEnabled: true,
            columns: [
                {
                    type: "selection",
                    width: 39,
                    cssClass: "circle-checkbox-only-editOwner",
                    fixed: true,
                    fixedPosition: "left"
                },
                { dataField: "Name", caption: "Name" },
                { dataField: "Email", caption: "Email" },
                { dataField: "UserType", caption: "User Type" },
                { dataField: "Role", caption: "Role" }
            ],
            onCellPrepared: function (e) {
                if (e.rowType === "data" && e.column.command === "select") {
                    const currentOwner = $("#currentOwnerName").val();
                    if (e.data.Name === currentOwner) {
                        $(e.cellElement).addClass("preselected-green-checkbox");
                    } else {
                        $(e.cellElement).removeClass("preselected-green-checkbox");
                    }
                }
            }
        });

        // ========== 3. Open Assign Owner Modal ==========
        $(document).on("click", ".assign-owner-action", function (e) {
            e.preventDefault();

            const selected = ticketGridInstance.getSelectedRowsData();
            if (selected.length === 0) {
                alert("Please select a ticket to assign owner.");
                return;
            }

            const ticket = selected[0];

            $("#assignOwnerTicketID").val(ticket.TicketID);
            $("#assignOwnerID").val(ticket.ID);
            $("#currentOwnerName").val(ticket.Owner?.split(" (")[0] || "");

            const grid = $("#editassignToOwnerGrid").dxDataGrid("instance");
            grid.deselectAll();
            grid.refresh();

            bootstrap.Modal.getOrCreateInstance(document.getElementById("editassignOwnerModal")).show();
        });

        // ========== 4. Close Owner Modal on X Click ==========
        $(document).on("click", "#closeAssignOwnerX", function () {
            const modal = bootstrap.Modal.getInstance(document.getElementById("editassignOwnerModal"));
            if (modal) modal.hide();
        });

        // ========== 5. Assign Owner Button Click ==========
        $(document).on("click", "#editassignOwnerBtn", function () {
            console.log("Assign Owner Button Clicked");

            const grid = $("#editassignToOwnerGrid").dxDataGrid("instance");
            const selectedUser = grid.getSelectedRowsData()[0];

            if (!selectedUser) {
                alert("Please select a user to assign as owner.");
                return;
            }

            const id = parseInt($("#assignOwnerID").val());
            const ticketId = $("#assignOwnerTicketID").val();
            const ownerValue = `${selectedUser.Name} (${selectedUser.Role})`;

            const existingTicket = ticketData.find(t => t.ID === id);
            if (!existingTicket) {
                alert("Could not find ticket data.");
                return;
            }

            const updatedData = {
                ID: id,
                TicketID: ticketId,
                Computer: existingTicket.Computer,
                Status: existingTicket.Status,
                Owner: ownerValue,
                AssignedTo: existingTicket.AssignedTo,
                Description: existingTicket.Description,
                Email: existingTicket.Email,
                Priority: existingTicket.Priority
            };

            $.ajax({
                url: '/Ticket/UpdateTicket',
                type: 'POST',
                data: updatedData,
                success: function () {
                    const index = ticketData.findIndex(t => t.ID === id);
                    if (index !== -1) {
                        Object.assign(ticketData[index], updatedData);
                    }

                    ticketGridInstance.option("dataSource", ticketData);
                    ticketGridInstance.refresh();
                    ticketGridInstance.clearSelection();

                    bootstrap.Modal.getInstance(document.getElementById("editassignOwnerModal")).hide();
                    showSuccessToast(); // Optional
                },
                error: function () {
                    alert("Error updating Owner.");
                }
            });
        });
    });
</script>


<!-- SortableJS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.15.0/Sortable.min.js"></script>

@section Scripts {


    <script src="~/Scripts/Ticket/ticket-main.js"></script>
    <script src="~/Content/Vishal/Filter.js"></script>

}


@Html.Partial("_DeleteTicketModal")
@Html.Partial("_ViewTicketModal")
@Html.Partial("_ViewHistoryModal")
@Html.Partial("_EditTicketModal")
@Html.Partial("_ToastPartial")
@Html.Partial("_EditAssignToModal")
@Html.Partial("_EditAssignOwnerModel")
@Html.Partial("_FilterModal")
@Html.Partial("_ColumnChooserModal")





